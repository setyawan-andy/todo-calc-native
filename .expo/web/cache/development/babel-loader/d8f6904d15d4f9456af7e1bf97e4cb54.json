{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport React, { Component } from 'react';\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\nimport colors from \"../Colors\";\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { Swipeable } from 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TodoModal = function (_Component) {\n  _inherits(TodoModal, _Component);\n\n  var _super = _createSuper(TodoModal);\n\n  function TodoModal() {\n    var _this;\n\n    _classCallCheck(this, TodoModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      newTodo: \"\"\n    };\n\n    _this.togglerTodoCompleted = function (index) {\n      var list = _this.props.list;\n      list.todos[index].completed = !list.todos[index].completed;\n\n      _this.props.updateList(list);\n    };\n\n    _this.addTodo = function () {\n      var list = _this.props.list;\n\n      if (!list.todos.some(function (todo) {\n        return todo.title === _this.state.newTodo;\n      })) {\n        list.todos.push({\n          title: _this.state.newTodo,\n          completed: false\n        });\n\n        _this.props.updateList(list);\n      }\n\n      _this.setState({\n        newTodo: \"\"\n      });\n\n      Keyboard.dismiss();\n    };\n\n    _this.deleteTodo = function (index) {\n      var list = _this.props.list;\n      list.todos.splice(index, 1);\n\n      _this.props.updateList(list);\n    };\n\n    _this.renderTodo = function (todo, index) {\n      return _jsx(GestureHandlerRootView, {\n        children: _jsx(Swipeable, {\n          renderRightActions: function renderRightActions(_, dragX) {\n            return _this.rightActions(dragX, index);\n          },\n          children: _jsxs(View, {\n            style: styles.todoContainer,\n            children: [_jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return _this.togglerTodoCompleted(index);\n              },\n              children: _jsx(Feather, {\n                name: todo.completed ? 'check-square' : 'square',\n                size: 18,\n                color: colors.gray,\n                style: {\n                  width: 32\n                }\n              })\n            }), _jsx(Text, {\n              style: [styles.todo, {\n                textDecorationLine: todo.completed ? 'line-through' : 'none',\n                color: todo.completed ? colors.gray : colors.black\n              }],\n              children: todo.title\n            })]\n          })\n        })\n      });\n    };\n\n    _this.rightActions = function (dragX, index) {\n      var scale = dragX.interpolate({\n        inputRange: [-100, 0],\n        outputRange: [1, 0.9],\n        extrapolate: \"clamp\"\n      });\n      var opacity = dragX.interpolate({\n        inputRange: [-100, -20, 0],\n        outputRange: [1, 0.9, 0],\n        extrapolate: \"clamp\"\n      });\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.deleteTodo(index);\n        },\n        children: _jsx(Animated.View, {\n          style: [styles.deleteButton, {\n            opacity: opacity\n          }],\n          children: _jsx(Animated.Text, {\n            style: {\n              color: colors.white,\n              fontWeight: \"bold\",\n              transform: [{\n                scale: scale\n              }]\n            },\n            children: \"Delete\"\n          })\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var list = this.props.list;\n      var taskCount = list.todos.length;\n      var completedCount = list.todos.filter(function (todo) {\n        return todo.completed;\n      }).length;\n      return _jsx(KeyboardAvoidingView, {\n        style: {\n          flex: 1\n        },\n        behavior: \"height\",\n        children: _jsxs(SafeAreaView, {\n          style: styles.container,\n          children: [_jsx(TouchableOpacity, {\n            style: {\n              position: \"absolute\",\n              top: 32,\n              right: 24,\n              zIndex: 10\n            },\n            onPress: this.props.closeModal,\n            children: _jsx(AntDesign, {\n              name: \"close\",\n              size: 20,\n              color: colors.black\n            })\n          }), _jsxs(View, {\n            style: [styles.section, styles.header, {\n              borderBottomColor: list.color\n            }],\n            children: [_jsx(Text, {\n              style: styles.title,\n              children: list.name\n            }), _jsxs(Text, {\n              style: styles.taskCount,\n              children: [completedCount, \" of \", taskCount, \" tasks\"]\n            })]\n          }), _jsx(View, {\n            style: [styles.section, {\n              flex: 3,\n              marginVertical: 16\n            }],\n            children: _jsx(FlatList, {\n              data: list.todos,\n              renderItem: function renderItem(_ref) {\n                var item = _ref.item,\n                    index = _ref.index;\n                return _this2.renderTodo(item, index);\n              },\n              keyExtractor: function keyExtractor(item) {\n                return item.title;\n              },\n              showsVerticalScrollIndicator: false\n            })\n          }), _jsxs(View, {\n            style: [styles.section, styles.footer],\n            children: [_jsx(TextInput, {\n              style: [styles.input, {\n                borderColor: list.color\n              }],\n              onChangeText: function onChangeText(text) {\n                return _this2.setState({\n                  newTodo: text\n                });\n              },\n              value: this.state.newTodo\n            }), _jsx(TouchableOpacity, {\n              style: [styles.addTodo, {\n                backgroundColor: list.color\n              }],\n              onPress: function onPress() {\n                return _this2.addTodo();\n              },\n              children: _jsx(AntDesign, {\n                name: \"plus\",\n                size: 16,\n                color: colors.white\n              })\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n\n  return TodoModal;\n}(Component);\n\nexport { TodoModal as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  section: {\n    alignSelf: \"stretch\"\n  },\n  header: {\n    justifyContent: \"flex-end\",\n    marginLeft: 64,\n    borderBottomWidth: 3,\n    paddingTop: 16\n  },\n  title: {\n    fontSize: 36,\n    fontWeight: \"bold\",\n    color: colors.black\n  },\n  taskCount: {\n    marginTop: 4,\n    marginBottom: 16,\n    color: colors.gray,\n    fontWeight: \"600\"\n  },\n  footer: {\n    paddingHorizontal: 32,\n    flexDirection: 'row',\n    alignItems: \"center\",\n    marginBottom: 16,\n    paddingVertical: 16\n  },\n  input: {\n    flex: 1,\n    height: 48,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderRadius: 6,\n    marginRight: 8,\n    paddingHorizontal: 8\n  },\n  addTodo: {\n    borderRadius: 4,\n    padding: 16,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  todoContainer: {\n    paddingVertical: 16,\n    flexDirection: 'row',\n    alignItems: \"center\",\n    paddingLeft: 32\n  },\n  todo: {\n    color: colors.black,\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  deleteButton: {\n    flex: 1,\n    backgroundColor: colors.red,\n    alignItems: \"center\",\n    width: 80,\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/andysetyawan/Documents/bootcamp-dw/week4/todoApps-v1/components/TodoModal.js"],"names":["React","Component","AntDesign","Feather","colors","GestureHandlerRootView","Swipeable","TodoModal","state","newTodo","togglerTodoCompleted","index","list","props","todos","completed","updateList","addTodo","some","todo","title","push","setState","Keyboard","dismiss","deleteTodo","splice","renderTodo","_","dragX","rightActions","styles","todoContainer","gray","width","textDecorationLine","color","black","scale","interpolate","inputRange","outputRange","extrapolate","opacity","deleteButton","white","fontWeight","transform","taskCount","length","completedCount","filter","flex","container","position","top","right","zIndex","closeModal","section","header","borderBottomColor","name","marginVertical","item","footer","input","borderColor","text","backgroundColor","StyleSheet","create","justifyContent","alignItems","alignSelf","marginLeft","borderBottomWidth","paddingTop","fontSize","marginTop","marginBottom","paddingHorizontal","flexDirection","paddingVertical","height","borderWidth","hairlineWidth","borderRadius","marginRight","padding","paddingLeft","red"],"mappings":"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","sourcesContent":["import { Text, View, StyleSheet, SafeAreaView, TouchableOpacity, FlatList, KeyboardAvoidingView, TextInput, Keyboard, Animated } from 'react-native';\nimport React, { Component } from 'react';\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\nimport colors from '../Colors';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { Swipeable } from 'react-native-gesture-handler';\n\nexport default class TodoModal extends Component {\n\n    state = {\n        newTodo: \"\"\n    };\n\n    togglerTodoCompleted = (index) => {\n        let list = this.props.list;\n        list.todos[index].completed = !list.todos[index].completed;\n\n        this.props.updateList(list);\n    };\n\n    addTodo = () => {\n        let list = this.props.list;\n\n        if(!list.todos.some(todo => todo.title === this.state.newTodo)){\n            list.todos.push({title: this.state.newTodo, completed: false})\n            this.props.updateList(list);\n        }\n        \n        this.setState({newTodo: \"\"});\n\n        Keyboard.dismiss();\n    }\n\n    deleteTodo = (index) => {\n        let list = this.props.list;\n        list.todos.splice(index, 1);\n\n        this.props.updateList(list);\n    };\n\n    renderTodo = (todo, index) => {\n        return (\n            <GestureHandlerRootView>\n                <Swipeable renderRightActions={(_, dragX) => this.rightActions(dragX, index)}>\n                <View style={styles.todoContainer}>\n                    <TouchableOpacity onPress={() => this.togglerTodoCompleted(index)}>\n                        <Feather \n                            name={todo.completed ? 'check-square': 'square'} \n                            size={18} color={colors.gray} \n                            style={{width: 32}} />\n                    </TouchableOpacity>\n                    <Text \n                        style={[\n                            styles.todo, \n                            {\n                                textDecorationLine: todo.completed ? 'line-through' : 'none', \n                                color: todo.completed ? colors.gray : colors.black\n                            }\n                        ]}\n                    >\n                        {todo.title}\n                    </Text>\n                </View>\n            </Swipeable>\n            </GestureHandlerRootView>\n            \n        );\n    };\n\n    rightActions = (dragX, index) => {\n        \n        const scale = dragX.interpolate({\n            inputRange: [-100, 0],\n            outputRange: [1, 0.9],\n            extrapolate: \"clamp\"\n        });\n\n        const opacity = dragX.interpolate({\n            inputRange: [-100, -20, 0],\n            outputRange: [1, 0.9, 0],\n            extrapolate: \"clamp\"\n        });\n        \n        return (\n            <TouchableOpacity onPress={() => this.deleteTodo(index)}>\n                <Animated.View style={[styles.deleteButton, {opacity: opacity}]}>\n                    <Animated.Text style={{color: colors.white, fontWeight: \"bold\", transform: [{scale}]}}>\n                        Delete\n                    </Animated.Text>\n                </Animated.View>\n            </TouchableOpacity>\n        );\n    };\n\n  render() {\n\n    const list = this.props.list\n\n    const taskCount = list.todos.length;\n    const completedCount = list.todos.filter(todo => todo.completed).length;\n\n    return (\n        <KeyboardAvoidingView style={{flex: 1}} behavior=\"height\">\n            <SafeAreaView style={styles.container}>\n                <TouchableOpacity\n                    style={{position: \"absolute\", top: 32, right: 24, zIndex: 10}}\n                    onPress={this.props.closeModal}\n                >\n                    <AntDesign name='close' size={20} color={colors.black}/>\n                </TouchableOpacity>\n\n                <View \n                    style={[styles.section, styles.header, {borderBottomColor: list.color}]}\n                >\n                    <Text style={styles.title}>{list.name}</Text>\n                    <Text style={styles.taskCount}>\n                        {completedCount} of {taskCount} tasks\n                    </Text>\n                </View>\n\n                <View style={[styles.section, {flex: 3, marginVertical: 16}]}>\n                    <FlatList \n                        data={list.todos}\n                        renderItem={({item, index}) => this.renderTodo(item, index)}\n                        keyExtractor={item => item.title}\n                        showsVerticalScrollIndicator={false}\n                    />\n                </View>\n\n                <View style={[styles.section, styles.footer]} >\n                    <TextInput \n                        style={[styles.input, {borderColor: list.color}]} \n                        onChangeText={text => this.setState({newTodo: text})}\n                        value={this.state.newTodo}\n                    />\n                    <TouchableOpacity \n                        style={[styles.addTodo, {backgroundColor: list.color}]}\n                        onPress={() => this.addTodo()}\n                    >\n                        <AntDesign name='plus' size={16} color={colors.white}/>\n                    </TouchableOpacity>\n                </View>\n            </SafeAreaView>\n        </KeyboardAvoidingView>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    section: {\n        alignSelf: \"stretch\",\n    },\n    header: {\n        justifyContent: \"flex-end\",\n        marginLeft: 64,\n        borderBottomWidth: 3,\n        paddingTop: 16,\n    },\n    title: {\n        fontSize: 36,\n        fontWeight: \"bold\",\n        color: colors.black,\n    },\n    taskCount: {\n        marginTop: 4,\n        marginBottom: 16,\n        color: colors.gray,\n        fontWeight: \"600\",\n    },\n    footer: {\n        paddingHorizontal: 32,\n        flexDirection: 'row',\n        alignItems: \"center\",\n        marginBottom: 16,\n        paddingVertical: 16,\n    },\n    input: {\n        flex: 1,\n        height: 48,\n        borderWidth: StyleSheet.hairlineWidth,\n        borderRadius: 6,\n        marginRight: 8,\n        paddingHorizontal: 8,\n        // marginBottom: 16,\n    },\n    addTodo: {\n        // marginBottom: 16,\n        borderRadius: 4,\n        padding: 16,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    todoContainer: {\n        paddingVertical: 16,\n        flexDirection: 'row',\n        alignItems: \"center\",\n        paddingLeft: 32,\n    },\n    todo: {\n        color: colors.black,\n        fontWeight: \"700\",\n        fontSize: 16,\n    }, \n    deleteButton: {\n        flex: 1,\n        backgroundColor: colors.red,\n        alignItems: \"center\",\n        width: 80,\n        justifyContent: \"center\",\n    },\n})"]},"metadata":{},"sourceType":"module"}