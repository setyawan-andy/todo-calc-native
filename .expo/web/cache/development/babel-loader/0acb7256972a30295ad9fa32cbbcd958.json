{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport colors from \"../Colors\";\nimport Home from \"./screens/HomeScreen\";\nimport Todo from \"./screens/TodoScreen\";\nimport Calculator from \"./screens/CalculatorScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar homeName = 'Home';\nvar todoName = 'Todo';\nvar calculatorName = 'Calculator';\nvar Tab = createBottomTabNavigator();\n\nvar MainContainer = function (_Component) {\n  _inherits(MainContainer, _Component);\n\n  var _super = _createSuper(MainContainer);\n\n  function MainContainer() {\n    _classCallCheck(this, MainContainer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MainContainer, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(NavigationContainer, {\n        children: _jsxs(Tab.Navigator, {\n          initialRouteName: homeName,\n          screenOptions: function screenOptions(_ref) {\n            var route = _ref.route;\n            return {\n              tabBarIcon: function tabBarIcon(_ref2) {\n                var focused = _ref2.focused;\n                var iconName;\n                var rn = route.name;\n\n                if (rn === homeName) {\n                  iconName = focused ? 'home' : 'home-outline';\n                } else if (rn === todoName) {\n                  iconName = focused ? 'list-sharp' : 'list-outline';\n                } else if (rn === calculatorName) {\n                  iconName = focused ? 'calculator' : 'calculator-outline';\n                }\n\n                return _jsx(Ionicons, {\n                  name: iconName,\n                  size: 32,\n                  color: colors.blue\n                });\n              },\n              tabBarStyle: {\n                height: 70,\n                padding: 10\n              },\n              tabBarActiveTintColor: colors.blue,\n              tabBarInactiveTintColor: \"grey\",\n              tabBarLabelStyle: {\n                paddingBottom: 10,\n                fontSize: 14,\n                fontWeight: \"400\"\n              }\n            };\n          },\n          children: [_jsx(Tab.Screen, {\n            name: todoName,\n            component: Todo\n          }), _jsx(Tab.Screen, {\n            name: homeName,\n            component: Home\n          }), _jsx(Tab.Screen, {\n            name: calculatorName,\n            component: Calculator\n          })]\n        })\n      });\n    }\n  }]);\n\n  return MainContainer;\n}(Component);\n\nexport { MainContainer as default };","map":{"version":3,"sources":["/Users/andysetyawan/Documents/bootcamp-dw/week4/todoApps-v1/navigation/MainContainer.js"],"names":["React","Component","NavigationContainer","createBottomTabNavigator","Ionicons","colors","Home","Todo","Calculator","homeName","todoName","calculatorName","Tab","MainContainer","route","tabBarIcon","focused","iconName","rn","name","blue","tabBarStyle","height","padding","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","paddingBottom","fontSize","fontWeight"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,MAAP;AAKA,OAAOC,IAAP;AACA,OAAOC,IAAP;AACA,OAAOC,UAAP;;;AAKA,IAAMC,QAAQ,GAAG,MAAjB;AACA,IAAMC,QAAQ,GAAG,MAAjB;AACA,IAAMC,cAAc,GAAG,YAAvB;AAEA,IAAMC,GAAG,GAAGT,wBAAwB,EAApC;;IAEqBU,a;;;;;;;;;;;;;WAEjB,kBAAS;AACL,aACI,KAAC,mBAAD;AAAA,kBACI,MAAC,GAAD,CAAK,SAAL;AACI,UAAA,gBAAgB,EAAEJ,QADtB;AAEI,UAAA,aAAa,EAAE;AAAA,gBAAEK,KAAF,QAAEA,KAAF;AAAA,mBAAc;AACzBC,cAAAA,UAAU,EAAE,2BAAe;AAAA,oBAAbC,OAAa,SAAbA,OAAa;AACvB,oBAAIC,QAAJ;AACA,oBAAIC,EAAE,GAAGJ,KAAK,CAACK,IAAf;;AAEA,oBAAGD,EAAE,KAAKT,QAAV,EAAmB;AACfQ,kBAAAA,QAAQ,GAAGD,OAAO,GAAG,MAAH,GAAY,cAA9B;AACH,iBAFD,MAEO,IAAIE,EAAE,KAAKR,QAAX,EAAoB;AACvBO,kBAAAA,QAAQ,GAAGD,OAAO,GAAG,YAAH,GAAkB,cAApC;AACH,iBAFM,MAEA,IAAIE,EAAE,KAAKP,cAAX,EAA0B;AAC7BM,kBAAAA,QAAQ,GAAGD,OAAO,GAAG,YAAH,GAAkB,oBAApC;AACH;;AACD,uBAAO,KAAC,QAAD;AAAU,kBAAA,IAAI,EAAEC,QAAhB;AAA0B,kBAAA,IAAI,EAAE,EAAhC;AAAoC,kBAAA,KAAK,EAAEZ,MAAM,CAACe;AAAlD,kBAAP;AAEH,eAdwB;AAezBC,cAAAA,WAAW,EAAE;AACTC,gBAAAA,MAAM,EAAE,EADC;AAETC,gBAAAA,OAAO,EAAE;AAFA,eAfY;AAmBzBC,cAAAA,qBAAqB,EAAEnB,MAAM,CAACe,IAnBL;AAoBzBK,cAAAA,uBAAuB,EAAE,MApBA;AAqBzBC,cAAAA,gBAAgB,EAAE;AACdC,gBAAAA,aAAa,EAAE,EADD;AAEdC,gBAAAA,QAAQ,EAAE,EAFI;AAGdC,gBAAAA,UAAU,EAAE;AAHE;AArBO,aAAd;AAAA,WAFnB;AAAA,qBA+BI,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAEnB,QAAlB;AAA4B,YAAA,SAAS,EAAEH;AAAvC,YA/BJ,EAgCI,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAEE,QAAlB;AAA4B,YAAA,SAAS,EAAEH;AAAvC,YAhCJ,EAiCI,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAEK,cAAlB;AAAkC,YAAA,SAAS,EAAEH;AAA7C,YAjCJ;AAAA;AADJ,QADJ;AAyCH;;;;EA5CsCP,S;;SAAtBY,a","sourcesContent":["import React, { Component } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport colors from \"../Colors\";\n\n\n\n//screens\nimport Home from \"./screens/HomeScreen\";\nimport Todo from \"./screens/TodoScreen\";\nimport Calculator from \"./screens/CalculatorScreen\";\n\n\n\n//screen names\nconst homeName = 'Home';\nconst todoName = 'Todo';\nconst calculatorName = 'Calculator';\n\nconst Tab = createBottomTabNavigator();\n\nexport default class MainContainer extends Component {\n    \n    render() {\n        return(\n            <NavigationContainer>\n                <Tab.Navigator\n                    initialRouteName={homeName}\n                    screenOptions={({route}) => ({\n                        tabBarIcon: ({focused}) => {\n                            let iconName;\n                            let rn = route.name;\n    \n                            if(rn === homeName){\n                                iconName = focused ? 'home' : 'home-outline'\n                            } else if (rn === todoName){\n                                iconName = focused ? 'list-sharp' : 'list-outline'\n                            } else if (rn === calculatorName){\n                                iconName = focused ? 'calculator' : 'calculator-outline'\n                            }\n                            return <Ionicons name={iconName} size={32} color={colors.blue} />\n                            \n                        },\n                        tabBarStyle: {\n                            height: 70,\n                            padding: 10,\n                        },\n                        tabBarActiveTintColor: colors.blue,\n                        tabBarInactiveTintColor: \"grey\",\n                        tabBarLabelStyle: {\n                            paddingBottom: 10,\n                            fontSize: 14,\n                            fontWeight: \"400\",\n                        },\n                    })}\n                >\n                    \n                    <Tab.Screen name={todoName} component={Todo} />\n                    <Tab.Screen name={homeName} component={Home} />\n                    <Tab.Screen name={calculatorName} component={Calculator} />\n    \n    \n                </Tab.Navigator>\n            </NavigationContainer>\n        )\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}