{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { Component } from 'react';\nimport { AntDesign } from \"@expo/vector-icons\";\nimport colors from \"../Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddListModal = function (_Component) {\n  _inherits(AddListModal, _Component);\n\n  var _super = _createSuper(AddListModal);\n\n  function AddListModal() {\n    var _this;\n\n    _classCallCheck(this, AddListModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.backgroundColor = [\"#5CD859\", \"#24A6D9\", \"#595BD9\", \"#8022D9\", \"#D159D8\", \"#D85963\", \"#D88559\"];\n    _this.state = {\n      name: \"\",\n      color: _this.backgroundColor[0]\n    };\n\n    _this.createTodo = function () {\n      var _this$state = _this.state,\n          name = _this$state.name,\n          color = _this$state.color;\n      var list = {\n        name: name,\n        color: color\n      };\n\n      _this.props.addList(list);\n\n      _this.setState({\n        name: \"\"\n      });\n\n      _this.props.closeModal();\n    };\n\n    return _this;\n  }\n\n  _createClass(AddListModal, [{\n    key: \"renderColors\",\n    value: function renderColors() {\n      var _this2 = this;\n\n      return this.backgroundColor.map(function (color) {\n        return _jsx(TouchableOpacity, {\n          style: [styles.colorSelect, {\n            backgroundColor: color\n          }],\n          onPress: function onPress() {\n            return _this2.setState({\n              color: color\n            });\n          }\n        }, color);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsxs(KeyboardAvoidingView, {\n        style: styles.container,\n        behavior: \"padding\",\n        children: [_jsx(TouchableOpacity, {\n          style: {\n            position: \"absolute\",\n            top: 64,\n            right: 32\n          },\n          onPress: this.props.closeModal,\n          children: _jsx(AntDesign, {\n            name: \"close\",\n            size: 24,\n            color: colors.black\n          })\n        }), _jsxs(View, {\n          style: {\n            alignSelf: \"stretch\",\n            marginHorizontal: 32\n          },\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"Create Todo List\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"List Name ?\",\n            onChangeText: function onChangeText(text) {\n              return _this3.setState({\n                name: text\n              });\n            }\n          }), _jsx(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              marginTop: 12\n            },\n            children: this.renderColors()\n          }), _jsx(TouchableOpacity, {\n            style: [styles.tapCreate, {\n              backgroundColor: this.state.color\n            }],\n            onPress: this.createTodo,\n            children: _jsx(Text, {\n              style: {\n                color: colors.white,\n                fontWeight: \"400\",\n                fontSize: 16\n              },\n              children: \"Create !\"\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return AddListModal;\n}(Component);\n\nexport { AddListModal as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: \"700\",\n    color: colors.black,\n    alignSelf: 'center',\n    marginBottom: 16\n  },\n  input: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: colors.blue,\n    borderRadius: 6,\n    height: 50,\n    marginTop: 8,\n    paddingHorizontal: 16,\n    fontSize: 18\n  },\n  tapCreate: {\n    marginTop: 24,\n    height: 50,\n    borderRadius: 6,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  colorSelect: {\n    width: 30,\n    height: 30,\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["/Users/andysetyawan/Documents/bootcamp-dw/week4/todoApps-v1/components/AddListModal.js"],"names":["React","Component","AntDesign","colors","AddListModal","backgroundColor","state","name","color","createTodo","list","props","addList","setState","closeModal","map","styles","colorSelect","container","position","top","right","black","alignSelf","marginHorizontal","title","input","text","flexDirection","justifyContent","marginTop","renderColors","tapCreate","white","fontWeight","fontSize","StyleSheet","create","flex","alignItems","marginBottom","borderWidth","hairlineWidth","borderColor","blue","borderRadius","height","paddingHorizontal","width"],"mappings":"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","sourcesContent":["import { Text, View, StyleSheet, KeyboardAvoidingView, TouchableOpacity, TextInput } from 'react-native'\nimport React, { Component } from 'react'\nimport { AntDesign } from \"@expo/vector-icons\";\nimport colors from '../Colors';\n\n\nexport default class AddListModal extends Component {\n    \n    backgroundColor = [\"#5CD859\", \"#24A6D9\", \"#595BD9\", \"#8022D9\", \"#D159D8\", \"#D85963\", \"#D88559\"];\n\n    state = {\n        name: \"\",\n        color: this.backgroundColor[0]\n    };\n\n    createTodo = () => {\n        const { name, color } = this.state;\n\n        const list = {name, color};\n\n        this.props.addList(list);\n\n        this.setState({name: \"\"});\n        this.props.closeModal();\n    }\n\n    renderColors(){\n        return this.backgroundColor.map(color => {\n            return (\n                <TouchableOpacity \n                    key={color} \n                    style={[styles.colorSelect, {backgroundColor: color}]}\n                    onPress={() => this.setState({color})}\n                />\n            )\n        })\n    }\n  \n    render() {\n    return (\n      <KeyboardAvoidingView \n        style={styles.container}\n        behavior=\"padding\"\n      >\n        <TouchableOpacity\n            style={{\n                position: \"absolute\",\n                top: 64,\n                right: 32\n            }}\n            onPress={this.props.closeModal}\n        >\n            <AntDesign\n                name='close'\n                size={24}\n                color={colors.black}\n            />\n        </TouchableOpacity>\n\n        <View\n            style={{\n                alignSelf: \"stretch\",\n                marginHorizontal: 32\n            }}\n        >\n            <Text style={styles.title}>Create Todo List</Text>\n            <TextInput \n                style={styles.input} \n                placeholder=\"List Name ?\"\n                onChangeText={text => this.setState({name: text})}\n            />\n\n            <View style={{flexDirection: \"row\", justifyContent: \"space-between\", marginTop: 12}}>{this.renderColors()}</View>\n\n            <TouchableOpacity \n                    style={[styles.tapCreate, {backgroundColor: this.state.color}]}\n                    onPress={this.createTodo}\n                >\n                <Text style={{color: colors.white, fontWeight: \"400\", fontSize: 16}}>Create !</Text>\n            </TouchableOpacity>\n        </View>\n      </KeyboardAvoidingView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n   container: {\n       flex: 1,\n       justifyContent: 'center',\n       alignItems: 'center',\n   },\n   title: {\n       fontSize: 28,\n       fontWeight: \"700\",\n       color: colors.black,\n       alignSelf: 'center',\n       marginBottom: 16,\n   },\n   input: {\n       borderWidth: StyleSheet.hairlineWidth,\n       borderColor: colors.blue,\n       borderRadius: 6,\n       height: 50,\n       marginTop: 8,\n       paddingHorizontal: 16,\n       fontSize: 18,\n   },\n   tapCreate: {\n       marginTop: 24,\n       height: 50,\n       borderRadius: 6,\n       alignItems: \"center\",\n       justifyContent: \"center\",\n   },\n   colorSelect: {\n       width: 30,\n       height: 30,\n       borderRadius: 4,\n   },\n});"]},"metadata":{},"sourceType":"module"}