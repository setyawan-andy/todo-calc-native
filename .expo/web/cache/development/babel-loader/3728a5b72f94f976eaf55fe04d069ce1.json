{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Row from \"../../components/Row\";\nimport Button from \"../../components/Button\";\nimport calculator, { initialState } from \"../../funcCalc/Calculator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Calculator = function (_Component) {\n  _inherits(Calculator, _Component);\n\n  var _super = _createSuper(Calculator);\n\n  function Calculator() {\n    var _this;\n\n    _classCallCheck(this, Calculator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = initialState;\n\n    _this.handleTap = function (type, value) {\n      _this.setState(function (state) {\n        return calculator(type, value, state);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Calculator, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(StatusBar, {\n          barStyle: \"light-content\"\n        }), _jsxs(SafeAreaView, {\n          children: [_jsx(Text, {\n            style: styles.value,\n            children: parseFloat(this.state.currentValue).toLocaleString()\n          }), _jsxs(Row, {\n            children: [_jsx(Button, {\n              text: \"C\",\n              theme: \"secondary\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"clear\");\n              }\n            }), _jsx(Button, {\n              text: \"+/-\",\n              theme: \"secondary\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"posneg\");\n              }\n            }), _jsx(Button, {\n              text: \"%\",\n              theme: \"secondary\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"percentage\");\n              }\n            }), _jsx(Button, {\n              text: \"/\",\n              theme: \"secondary\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"operator\", \"/\");\n              }\n            })]\n          }), _jsxs(Row, {\n            children: [_jsx(Button, {\n              text: \"7\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"number\", 7);\n              }\n            }), _jsx(Button, {\n              text: \"8\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"number\", 8);\n              }\n            }), _jsx(Button, {\n              text: \"9\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"number\", 9);\n              }\n            }), _jsx(Button, {\n              text: \"x\",\n              theme: \"accent\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"operator\", \"*\");\n              }\n            })]\n          }), _jsxs(Row, {\n            children: [_jsx(Button, {\n              text: \"4\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"number\", 4);\n              }\n            }), _jsx(Button, {\n              text: \"5\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"number\", 5);\n              }\n            }), _jsx(Button, {\n              text: \"6\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"number\", 6);\n              }\n            }), _jsx(Button, {\n              text: \"-\",\n              theme: \"accent\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"operator\", \"-\");\n              }\n            })]\n          }), _jsxs(Row, {\n            children: [_jsx(Button, {\n              text: \"1\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"number\", 1);\n              }\n            }), _jsx(Button, {\n              text: \"2\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"number\", 2);\n              }\n            }), _jsx(Button, {\n              text: \"3\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"number\", 3);\n              }\n            }), _jsx(Button, {\n              text: \"+\",\n              theme: \"accent\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"operator\", \"+\");\n              }\n            })]\n          }), _jsxs(Row, {\n            children: [_jsx(Button, {\n              text: \"0\",\n              size: \"double\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"number\", 0);\n              }\n            }), _jsx(Button, {\n              text: \".\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"number\", \".\");\n              }\n            }), _jsx(Button, {\n              text: \"=\",\n              theme: \"accent\",\n              onPress: function onPress() {\n                return _this2.handleTap(\"equal\");\n              }\n            })]\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return Calculator;\n}(Component);\n\nexport { Calculator as default };\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    justifyContent: \"flex-end\",\n    marginBottom: 16\n  },\n  value: {\n    color: \"#1572A1\",\n    fontSize: 40,\n    textAlign: \"right\",\n    marginRight: 20,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["/Users/andysetyawan/Documents/bootcamp-dw/week4/todoApps-v1/navigation/screens/CalculatorScreen.js"],"names":["React","Component","Row","Button","calculator","initialState","Calculator","state","handleTap","type","value","setState","styles","container","parseFloat","currentValue","toLocaleString","StyleSheet","create","flex","backgroundColor","justifyContent","marginBottom","color","fontSize","textAlign","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Text, StyleSheet, StatusBar, SafeAreaView } from \"react-native\";\nimport Row from \"../../components/Row\";\nimport Button from \"../../components/Button\";\nimport calculator, { initialState } from \"../../funcCalc/Calculator\";\n\nexport default class Calculator extends Component {\n    \n    state = initialState;\n\n    handleTap = (type, value) => {\n        this.setState(state => calculator(type, value, state));\n    };\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <StatusBar barStyle=\"light-content\" />\n                <SafeAreaView>\n                    <Text style={styles.value}>\n                        {parseFloat(this.state.currentValue).toLocaleString()}\n                    </Text>\n                    <Row>\n                        <Button\n                            text=\"C\"\n                            theme=\"secondary\"\n                            onPress={() => this.handleTap(\"clear\")}\n                        />\n                        <Button \n                            text=\"+/-\"\n                            theme=\"secondary\"\n                            onPress={() => this.handleTap(\"posneg\")}\n                        /> \n                        <Button \n                            text=\"%\"\n                            theme=\"secondary\"\n                            onPress={() => this.handleTap(\"percentage\")}\n                        /> \n                        <Button \n                            text=\"/\"\n                            theme=\"secondary\"\n                            onPress={() => this.handleTap(\"operator\", \"/\")}\n                        />\n                    </Row>\n                    <Row>\n                        <Button text=\"7\" onPress={() => this.handleTap(\"number\", 7)} />\n                        <Button text=\"8\" onPress={() => this.handleTap(\"number\", 8)} />\n                        <Button text=\"9\" onPress={() => this.handleTap(\"number\", 9)} />\n                        <Button\n                            text=\"x\"\n                            theme=\"accent\"\n                            onPress={() => this.handleTap(\"operator\", \"*\")}\n                        />\n                    </Row>\n                    <Row>\n                        <Button text=\"4\" onPress={() => this.handleTap(\"number\", 4)} />\n                        <Button text=\"5\" onPress={() => this.handleTap(\"number\", 5)} />\n                        <Button text=\"6\" onPress={() => this.handleTap(\"number\", 6)} />\n                        <Button\n                            text=\"-\"\n                            theme=\"accent\"\n                            onPress={() => this.handleTap(\"operator\", \"-\")}\n                        />\n                    </Row>\n                    <Row>\n                        <Button text=\"1\" onPress={() => this.handleTap(\"number\", 1)} />\n                        <Button text=\"2\" onPress={() => this.handleTap(\"number\", 2)} />\n                        <Button text=\"3\" onPress={() => this.handleTap(\"number\", 3)} />\n                        <Button\n                            text=\"+\"\n                            theme=\"accent\"\n                            onPress={() => this.handleTap(\"operator\", \"+\")}\n                        />\n                    </Row>\n                    <Row>\n                        <Button\n                            text=\"0\"\n                            size=\"double\"\n                            onPress={() => this.handleTap(\"number\", 0)}\n                        />\n                        <Button text=\".\" onPress={() => this.handleTap(\"number\", \".\")} />\n                        <Button\n                            text=\"=\"\n                            theme=\"accent\"\n                            onPress={() => this.handleTap(\"equal\")}\n                        />\n                    </Row>\n                </SafeAreaView>\n            </View>\n        );\n    }\n    \n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"#fff\",\n        justifyContent: \"flex-end\",\n        marginBottom: 16,\n    },\n    value: {\n        color: \"#1572A1\",\n        fontSize: 40,\n        textAlign: \"right\",\n        marginRight: 20,\n        marginBottom: 10\n    }\n});"]},"metadata":{},"sourceType":"module"}