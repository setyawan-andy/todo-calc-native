{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport colors from \"../Colors\";\nimport TodoModal from \"./TodoModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TodoList = function (_Component) {\n  _inherits(TodoList, _Component);\n\n  var _super = _createSuper(TodoList);\n\n  function TodoList() {\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      showListVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"toggleListModal\",\n    value: function toggleListModal() {\n      this.setState({\n        showListVisible: !this.state.showListVisible\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var list = this.props.list;\n      var completedCount = list.todos.filter(function (todo) {\n        return todo.completed;\n      }).length;\n      var remainingCount = list.todos.length - completedCount;\n      return _jsxs(View, {\n        children: [_jsx(Modal, {\n          animationType: \"slide\",\n          visible: this.state.showListVisible,\n          onRequestClose: function onRequestClose() {\n            return _this2.toggleListModal();\n          },\n          children: _jsx(TodoModal, {\n            list: list,\n            closeModal: function closeModal() {\n              return _this2.toggleListModal();\n            },\n            updateList: this.props.updateList\n          })\n        }), _jsxs(TouchableOpacity, {\n          style: [styles.listContainer, {\n            backgroundColor: list.color\n          }],\n          onPress: function onPress() {\n            return _this2.toggleListModal();\n          },\n          onLongPress: function onLongPress() {\n            return _this2.props.deleteList(list);\n          },\n          children: [_jsx(Text, {\n            style: styles.listTitle,\n            numberOfLines: 1,\n            children: list.name\n          }), _jsxs(View, {\n            style: {\n              alignItems: 'center'\n            },\n            children: [_jsx(Text, {\n              style: styles.count,\n              children: remainingCount\n            }), _jsx(Text, {\n              style: styles.subtitle,\n              children: \"Remaining\"\n            })]\n          }), _jsxs(View, {\n            style: {\n              alignItems: 'center'\n            },\n            children: [_jsx(Text, {\n              style: styles.count,\n              children: completedCount\n            }), _jsx(Text, {\n              style: styles.subtitle,\n              children: \"Completed\"\n            })]\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return TodoList;\n}(Component);\n\nexport { TodoList as default };\n;\nvar styles = StyleSheet.create({\n  listContainer: {\n    paddingVertical: 32,\n    paddingHorizontal: 16,\n    borderRadius: 6,\n    marginHorizontal: 12,\n    alignItems: 'center',\n    width: 200\n  },\n  listTitle: {\n    fontSize: 24,\n    fontWeight: \"700\",\n    color: colors.white,\n    marginBottom: 18\n  },\n  count: {\n    fontSize: 48,\n    fontWeight: \"100\",\n    color: colors.white\n  },\n  subtitle: {\n    fontSize: 12,\n    fontWeight: \"700\",\n    color: colors.white\n  }\n});","map":{"version":3,"sources":["/Users/andysetyawan/Documents/bootcamp-dw/week4/todoApps-v1/components/TodoList.js"],"names":["React","Component","colors","TodoModal","TodoList","state","showListVisible","setState","list","props","completedCount","todos","filter","todo","completed","length","remainingCount","toggleListModal","updateList","styles","listContainer","backgroundColor","color","deleteList","listTitle","name","alignItems","count","subtitle","StyleSheet","create","paddingVertical","paddingHorizontal","borderRadius","marginHorizontal","width","fontSize","fontWeight","white","marginBottom"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,SAAP;;;;IAEqBC,Q;;;;;;;;;;;;;;;UAEjBC,K,GAAQ;AACJC,MAAAA,eAAe,EAAE;AADb,K;;;;;;WAIR,2BAAkB;AACd,WAAKC,QAAL,CAAc;AAACD,QAAAA,eAAe,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA9B,OAAd;AACH;;;WAED,kBAAQ;AAAA;;AAEJ,UAAME,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAxB;AAEA,UAAME,cAAc,GAAGF,IAAI,CAACG,KAAL,CAAWC,MAAX,CAAkB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,SAAT;AAAA,OAAtB,EAA0CC,MAAjE;AACA,UAAMC,cAAc,GAAGR,IAAI,CAACG,KAAL,CAAWI,MAAX,GAAoBL,cAA3C;AAEA,aACI,MAAC,IAAD;AAAA,mBAEI,KAAC,KAAD;AACI,UAAA,aAAa,EAAC,OADlB;AAEI,UAAA,OAAO,EAAE,KAAKL,KAAL,CAAWC,eAFxB;AAGI,UAAA,cAAc,EAAE;AAAA,mBAAM,MAAI,CAACW,eAAL,EAAN;AAAA,WAHpB;AAAA,oBAKI,KAAC,SAAD;AACI,YAAA,IAAI,EAAET,IADV;AAEI,YAAA,UAAU,EAAE;AAAA,qBAAM,MAAI,CAACS,eAAL,EAAN;AAAA,aAFhB;AAGI,YAAA,UAAU,EAAE,KAAKR,KAAL,CAAWS;AAH3B;AALJ,UAFJ,EAcI,MAAC,gBAAD;AACI,UAAA,KAAK,EAAE,CAACC,MAAM,CAACC,aAAR,EAAuB;AAACC,YAAAA,eAAe,EAAEb,IAAI,CAACc;AAAvB,WAAvB,CADX;AAEI,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACL,eAAL,EAAN;AAAA,WAFb;AAGI,UAAA,WAAW,EAAE;AAAA,mBAAM,MAAI,CAACR,KAAL,CAAWc,UAAX,CAAsBf,IAAtB,CAAN;AAAA,WAHjB;AAAA,qBAKI,KAAC,IAAD;AACI,YAAA,KAAK,EAAEW,MAAM,CAACK,SADlB;AAEI,YAAA,aAAa,EAAE,CAFnB;AAAA,sBAIKhB,IAAI,CAACiB;AAJV,YALJ,EAYI,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACC,cAAAA,UAAU,EAAE;AAAb,aAAb;AAAA,uBACI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEP,MAAM,CAACQ,KAApB;AAAA,wBAA4BX;AAA5B,cADJ,EAEI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEG,MAAM,CAACS,QAApB;AAAA;AAAA,cAFJ;AAAA,YAZJ,EAiBI,MAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACF,cAAAA,UAAU,EAAE;AAAb,aAAb;AAAA,uBACI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEP,MAAM,CAACQ,KAApB;AAAA,wBAA4BjB;AAA5B,cADJ,EAEI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAES,MAAM,CAACS,QAApB;AAAA;AAAA,cAFJ;AAAA,YAjBJ;AAAA,UAdJ;AAAA,QADJ;AAyCH;;;;EA1DiC3B,S;;SAAjBG,Q;AA4DpB;AAED,IAAMe,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,aAAa,EAAE;AACXW,IAAAA,eAAe,EAAE,EADN;AAEXC,IAAAA,iBAAiB,EAAE,EAFR;AAGXC,IAAAA,YAAY,EAAE,CAHH;AAIXC,IAAAA,gBAAgB,EAAE,EAJP;AAKXR,IAAAA,UAAU,EAAE,QALD;AAMXS,IAAAA,KAAK,EAAE;AANI,GADc;AAS7BX,EAAAA,SAAS,EAAE;AACPY,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,UAAU,EAAE,KAFL;AAGPf,IAAAA,KAAK,EAAEpB,MAAM,CAACoC,KAHP;AAIPC,IAAAA,YAAY,EAAE;AAJP,GATkB;AAe7BZ,EAAAA,KAAK,EAAE;AACHS,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,UAAU,EAAE,KAFT;AAGHf,IAAAA,KAAK,EAAEpB,MAAM,CAACoC;AAHX,GAfsB;AAoB7BV,EAAAA,QAAQ,EAAE;AACNQ,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,UAAU,EAAE,KAFN;AAGNf,IAAAA,KAAK,EAAEpB,MAAM,CAACoC;AAHR;AApBmB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, Text, TouchableOpacity, View, Modal } from \"react-native\";\nimport colors from \"../Colors\";\nimport TodoModal from \"./TodoModal\";\n\nexport default class TodoList extends Component {\n    \n    state = {\n        showListVisible: false\n    }\n    \n    toggleListModal (){\n        this.setState({showListVisible: !this.state.showListVisible})\n    }\n\n    render(){\n\n        const list = this.props.list;\n\n        const completedCount = list.todos.filter(todo => todo.completed).length;\n        const remainingCount = list.todos.length - completedCount;\n\n        return (\n            <View>\n\n                <Modal\n                    animationType=\"slide\"\n                    visible={this.state.showListVisible}\n                    onRequestClose={() => this.toggleListModal()}\n                >\n                    <TodoModal \n                        list={list}\n                        closeModal={() => this.toggleListModal()}\n                        updateList={this.props.updateList}\n                    />\n                </Modal>\n\n                <TouchableOpacity \n                    style={[styles.listContainer, {backgroundColor: list.color}]}\n                    onPress={() => this.toggleListModal()}  \n                    onLongPress={() => this.props.deleteList(list)}  \n                >\n                    <Text \n                        style={styles.listTitle}\n                        numberOfLines={1}\n                    >\n                        {list.name}\n                    </Text>\n                    \n                    <View style={{alignItems: 'center'}}>\n                        <Text style={styles.count}>{remainingCount}</Text>\n                        <Text style={styles.subtitle}>Remaining</Text>\n                    </View>\n        \n                    <View style={{alignItems: 'center'}}>\n                        <Text style={styles.count}>{completedCount}</Text>\n                        <Text style={styles.subtitle}>Completed</Text>\n                    </View>\n        \n                </TouchableOpacity>\n            </View>\n            \n        );\n    }\n    \n};\n\nconst styles = StyleSheet.create({\n    listContainer: {\n        paddingVertical: 32,\n        paddingHorizontal: 16,\n        borderRadius: 6,\n        marginHorizontal: 12,\n        alignItems: 'center',\n        width: 200,\n    },\n    listTitle: {\n        fontSize: 24,\n        fontWeight: \"700\",\n        color: colors.white,\n        marginBottom: 18,\n    },\n    count: {\n        fontSize: 48,\n        fontWeight: \"100\",\n        color: colors.white,\n    },\n    subtitle: {\n        fontSize: 12,\n        fontWeight: \"700\",\n        color: colors.white,\n    },\n});"]},"metadata":{},"sourceType":"module"}